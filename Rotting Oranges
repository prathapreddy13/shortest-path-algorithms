class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        
        queue<vector<int>> q;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==2)
                {
                    q.push({i,j,0});
                    
                }
            }
        }
         int ans=0;
        vector<vector<int>> dir={{1,0},{0,1},{-1,0},{0,-1}};
        while(!q.empty())
        {
            auto temp=q.front();
            q.pop();
            ans=max(ans,temp[2]);
            for(auto &d:dir)
            {
                int x=temp[0]+d[0];
                int y=temp[1]+d[1];
                if(x<0||y<0||x>=n||y>=m||grid[x][y]==0||grid[x][y]==2)
                    continue;
                grid[x][y]=2;
                q.push({x,y,temp[2]+1});
            }
            
        }
       
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1)
                {
                    return -1;
                }
                
            }
        }
        return ans;
    }
};
