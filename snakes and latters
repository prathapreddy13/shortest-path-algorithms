class Solution {
public:
    vector<int> findcod(int pos,int n)
    {
        int x=(pos-1)/n;
        int y=(pos-1)%n;
        if(x&1)
            y=n-1-y;
        x=n-1-x;
        return {x,y};
    }
    int snakesAndLadders(vector<vector<int>>& board) {
        
        int n=board.size();
        queue<int> q;
        q.push(1);
        int steps=0;
        
        while(!q.empty())
        {
            int size=q.size();
            while(size--)
            {
                auto temp=q.front();
                q.pop();
                if(temp==n*n)
                    return steps;
                
                for(int i=1;i<=6;i++)
                {
                    int pos=temp+i;
                    if(pos>n*n)
                        break;
                    auto v=findcod(pos,n);
                    int row=v[0];
                    int col=v[1];
                    if(board[row][col]!=-1)
                    {
                        pos=board[row][col];
                    }
                    if(board[row][col]!=1e9)
                    {
                        q.push(pos);
                        board[row][col]=1e9;
                    }
                }
            }
            steps++;
        }
        return -1;
        
    }
};
